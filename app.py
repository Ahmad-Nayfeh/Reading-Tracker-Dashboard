import streamlit as st
import pandas as pd
import datetime
import db_manager as db # Our single source for all DB interactions

# --- Page Configuration ---
st.set_page_config(
    page_title="Reading Challenge Dashboard",
    page_icon="๐",
    layout="wide"
)

# --- Initial Data Load ---
# We fetch all data once at the start to determine the app's state.
all_data = db.get_all_data_for_stats()
members = all_data['members']
periods = all_data['periods']
setup_complete = bool(members and periods)

# --- Main Application Logic ---
st.title("๐ ููุญุฉ ุชุญูู ุชุญุฏู ุงููุฑูุงุก")

if not setup_complete:
    # --- SETUP WIZARD ---
    st.warning("๐ ูุฑุญุจุงู ุจู! ูููู ุจุฅุนุฏุงุฏ ุชุญุฏู ุงููุฑุงุกุฉ ุงูุฎุงุต ุจู.")

    # Step 1: Add Members (if none exist)
    if not members:
        st.subheader("ุงูุฎุทูุฉ 1: ุฅุถุงูุฉ ุฃุนุถุงุก ุงููุฌููุนุฉ")
        st.info("ุฃุฏุฎู ุฃุณูุงุก ุงููุดุงุฑูููุ ูู ุงุณู ูู ุณุทุฑ ุฌุฏูุฏ.")

        with st.form("new_members_form"):
            member_names_str = st.text_area("ุฃุณูุงุก ุงูุฃุนุถุงุก", height=250, placeholder="ุฎุงูุฏ\nุณุงุฑุฉ\nูุญูุฏ\n...")
            submitted = st.form_submit_button("ุฅุถุงูุฉ ุงูุฃุนุถุงุก ูุงูุงูุชูุงู ููุฎุทูุฉ ุงูุชุงููุฉ")

            if submitted:
                names = [name.strip() for name in member_names_str.split('\n') if name.strip()]
                if names:
                    try:
                        db.add_members(names)
                        st.success(f"ุชูุช ุฅุถุงูุฉ {len(names)} ุฃุนุถุงุก ุจูุฌุงุญ!")
                        st.rerun()
                    except Exception as e:
                        st.error(f"ุญุฏุซ ุฎุทุฃ: {e}")
                else:
                    st.error("ุงูุฑุฌุงุก ุฅุฏุฎุงู ุงุณู ูุงุญุฏ ุนูู ุงูุฃูู.")
    
    # Step 2: Add First Challenge Period (if members exist but no periods)
    elif not periods:
        st.subheader("ุงูุฎุทูุฉ 2: ุฅูุดุงุก ุฃูู ูุชุฑุฉ ุชุญุฏู")
        st.info("ุงูุขูุ ููุฏุฎู ูุนูููุงุช ุงููุชุงุจ ุงููุดุชุฑู ุงูุฃูู ูุชูุงุฑูุฎ ุงูุชุญุฏู.")

        with st.form("new_challenge_form"):
            st.write("#### ูุนูููุงุช ุงููุชุงุจ")
            book_title = st.text_input("ุนููุงู ุงููุชุงุจ")
            book_author = st.text_input("ุงุณู ุงููุคูู")
            publication_year = st.number_input("ุณูุฉ ุงููุดุฑ", min_value=1000, max_value=datetime.date.today().year, step=1, value=datetime.date.today().year)

            st.write("---")
            st.write("#### ุชูุงุฑูุฎ ุงูุชุญุฏู")
            today = datetime.date.today()
            start_date = st.date_input("ุชุงุฑูุฎ ุจุฏุงูุฉ ุงูุชุญุฏู", value=today)
            end_date = st.date_input("ุชุงุฑูุฎ ููุงูุฉ ุงูุชุญุฏู", value=today + datetime.timedelta(days=30))
            
            submitted = st.form_submit_button("ุฅูุดุงุก ุงูุชุญุฏู ูุงูุจุฏุก!")

            if submitted:
                if not book_title or not book_author:
                    st.error("ุงูุฑุฌุงุก ุฅุฏุฎุงู ุนููุงู ุงููุชุงุจ ูุงุณู ุงููุคูู.")
                elif start_date >= end_date:
                    st.error("ูุฌุจ ุฃู ูููู ุชุงุฑูุฎ ููุงูุฉ ุงูุชุญุฏู ุจุนุฏ ุชุงุฑูุฎ ุงูุจุฏุงูุฉ.")
                else:
                    book_info = {'title': book_title, 'author': book_author, 'year': publication_year}
                    challenge_info = {'start_date': str(start_date), 'end_date': str(end_date)}
                    
                    if db.add_book_and_challenge(book_info, challenge_info):
                        st.success(f"ุชู ุฅูุดุงุก ุงูุชุญุฏู ููุชุงุจ '{book_title}' ุจูุฌุงุญ!")
                        st.balloons()
                        st.rerun()
                    else:
                        st.error("ุญุฏุซ ุฎุทุฃ ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช ุฃุซูุงุก ุฅูุดุงุก ุงูุชุญุฏู.")
else:
    # --- MAIN DASHBOARD VIEW ---
    # This is where we will build the 4 pages you designed.
    st.sidebar.title("ุชููู")
    page = st.sidebar.radio("ุงุฎุชุฑ ุตูุญุฉ", ["ููุญุฉ ุงูุชุญูู", "ุนุฑุถ ุงูุจูุงูุงุช", "ุงูุฅุถุงูุงุช", "ุงูุฅุนุฏุงุฏุงุช"])

    if page == "ููุญุฉ ุงูุชุญูู":
        st.header("๐ ููุญุฉ ุงูุชุญูู ุงูุฑุฆูุณูุฉ (Dashboard)")
        st.info("ุณูุชู ุนุฑุถ ุงูุฅุญุตุงุฆูุงุช ูุงูุฑุณูู ุงูุจูุงููุฉ ููุง ูุฑูุจุงู.")
        # TODO: Build Dashboard UI
    
    elif page == "ุนุฑุถ ุงูุจูุงูุงุช":
        st.header("๐๏ธ ุนุฑุถ ุงูุจูุงูุงุช (Data Viewer)")
        st.info("ุณูุชู ุนุฑุถ ุฌุฏุงูู ุงูุจูุงูุงุช ููุง ูุน ุฅููุงููุฉ ุงูููุชุฑุฉ.")
        # TODO: Build Data Viewer UI

    elif page == "ุงูุฅุถุงูุงุช":
        st.header("โ ุงูุฅุถุงูุงุช (Add New)")
        st.info("ุณูุชู ุนุฑุถ ุฒุฑ ูุฅุถุงูุฉ ุชุญุฏู ุฌุฏูุฏ ููุง.")
        # TODO: Build Add-ons UI

    elif page == "ุงูุฅุนุฏุงุฏุงุช":
        st.header("โ๏ธ ุงูุฅุนุฏุงุฏุงุช (Settings)")
        st.info("ุณูุชู ุนุฑุถ ุงูุฅุนุฏุงุฏุงุช ุงูุนุงูุฉ ูุงูุฎุงุตุฉ ููุง.")
        # TODO: Build Settings UI

